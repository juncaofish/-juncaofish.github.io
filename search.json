[{"title":"hadoop-streaming进行数据标签","url":"http://yoursite.com/2016/09/04/hadoop-streaming进行数据标签/","content":"<h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><hr>\n<p>为了便于并行处理，我们的raw data通常以JSON格式存储在HDFS上。再通过solr建立索引，供线上系统去检索。<br>这样在需要对数据进行操作时，只需要实现相应的MapReduce方法，再添加到process flow里面。<br>例如，一条数据的sample:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;&quot;data&quot;:&quot;value&quot;,&quot;timestamp&quot;:unixtime,&quot;other_fields&quot;:&quot;something&quot;&#125;</div></pre></td></tr></table></figure>\n<p>有一天，我们的机器学习工程师train了一些model，需要对所有的raw data进行labelling，也就是把数据变成这样:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;&quot;data&quot;:&quot;value&quot;,&quot;timestamp&quot;:unixtime,&quot;other_fields&quot;:&quot;something&quot;,&quot;label1&quot;:&quot;predict1(value)&quot;,&quot;label2&quot;:&quot;predict2(value)&quot;&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h1><hr>\n<p>由于我们做数据的批处理通常是用Java实现Hadoop的MapReduce，而机器学习的工程师的model无一例外都是使用目前比较流行的python library。  </p>\n<p>为了解决这个开发语言异构的问题，我们首先想到了web service。<br>即在Mapper中实现:  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">create HTTP Get request  -&gt;  python model with wsgi server -&gt; prediction result -&gt; labels on raw data</div></pre></td></tr></table></figure>\n<p>但是实际运行时发现，mapreduce job在调用web service时的效率是相当感人。<br>多个mapper在向wsgi server发起同步请求时，如果server的并发响应不够，request就会进行排队等待。<br>Quora上搜索到的一条提问也得到这样的<a href=\"https://www.quora.com/How-can-I-optimise-web-service-calls-from-a-hadoop-system\" target=\"_blank\" rel=\"external\">解释</a></p>\n<blockquote>\n<p>if you’re asking how to efficiently make web service calls from mapreduce jobs, the answer is simple; don’t make web service calls from mapreduce jobs.  </p>\n</blockquote>\n<p>然后我们就只好另想办法，既要hadoop来管理job，又要能能够较为高效地调用python实现的model。<br>而<a href=\"http://hadoop.apache.org/docs/r2.6.0/hadoop-mapreduce-client/hadoop-mapreduce-client-core/HadoopStreaming.html\" target=\"_blank\" rel=\"external\">Hadoop-streaming</a>就可以帮我们完成这个任务。调用示例：  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">hadoop jar hadoop-streaming-2.6.0.jar \\</div><div class=\"line\">    -input myInputDirs \\</div><div class=\"line\">    -output myOutputDir \\</div><div class=\"line\">    -mapper /bin/cat \\</div><div class=\"line\">    -reducer /usr/bin/wc</div></pre></td></tr></table></figure>\n"},{"title":"手机按键精灵的硬件实现","url":"http://yoursite.com/2016/09/03/手机按键精灵的硬件实现/","content":""},{"title":"ESP8266和Blynk实现的远程智能浇花系统","url":"http://yoursite.com/2016/09/03/ESP8266和Blynk实现的远程智能浇花系统/","content":""},{"title":"语音交互机器人的树莓派实现","url":"http://yoursite.com/2016/09/03/语音交互机器人的树莓派实现/","content":""},{"title":"Git原理和使用","url":"http://yoursite.com/2016/09/03/Git原理和使用/","content":""},{"title":"HBase的Rowkey设计与Region Server调优","url":"http://yoursite.com/2016/09/03/HBase的Rowkey设计与Region-Server调优/","content":""},{"title":"用Phantom JS批量展现句法树","url":"http://yoursite.com/2016/09/03/用Phantom-JS批量展现句法树/","content":""},{"title":"用Scrapy抓Flickr的照片","url":"http://yoursite.com/2016/09/03/用Scrapy抓Flickr的照片/","content":""},{"title":"","url":"http://yoursite.com/2016/09/03/微信公众号聊天机器人的运行原理/","content":"<hr>\n<p>title: 微信公众号聊天机器人的运行原理<br>date: 2016-09-03 00:49:27</p>\n<h2 id=\"tags-DIY\"><a href=\"#tags-DIY\" class=\"headerlink\" title=\"tags: DIY \"></a>tags: DIY </h2><h1 id=\"我\"><a href=\"#我\" class=\"headerlink\" title=\"我\"></a>我</h1>"},{"title":"Template - Code embed","url":"http://yoursite.com/2016/09/01/Template-Code-embed/","content":"<h1 id=\"Demo-code-embedded-in-article\"><a href=\"#Demo-code-embedded-in-article\" class=\"headerlink\" title=\"Demo code embedded in article\"></a>Demo code embedded in article</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> main();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><em>python</em><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> os</div><div class=\"line\"><span class=\"keyword\">print</span> os.version</div><div class=\"line\"><span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> xrange(<span class=\"number\">10</span>):</div><div class=\"line\">    print(<span class=\"string\">\"hello, world!\"</span>)</div></pre></td></tr></table></figure></p>\n"},{"title":"Template - Hive读JSON","url":"http://yoursite.com/2016/09/01/用Hive处理海量JSON数据/","content":"<p><strong>简述</strong><br>安全模块记录用户20个维度的数据。所有数据以JSON格式被保存为大量的小文件，故通过hadoop archive命令被归档为har格式的文件。<br>通过以下命令可查看数据内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hadoop fs -ls har:///path/to/data.har</div></pre></td></tr></table></figure>\n<p><strong>数据处理</strong>   </p>\n<ol>\n<li>Preprocss  对数据进行前处理</li>\n<li>Create table schema with JSON sample</li>\n<li>Load JSON into hive table</li>\n</ol>\n"},{"title":"Hello World","url":"http://yoursite.com/2016/09/01/hello-world/","content":"<h1 id=\"初衷\"><a href=\"#初衷\" class=\"headerlink\" title=\"初衷\"></a>初衷</h1><p>发现年纪大了，记性越来越差。<br>所以搭建这个博客的初衷是记录自己工作和生活中的技术总结以及胡思乱想。</p>\n<p>调查了一些现有的博客平台，如CSDN、简书、WordPress等等，都没能抵挡自己心中的疑虑和小小的猎奇心理。<br>最后参考了一篇用<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>+<a href=\"https://github.com\" target=\"_blank\" rel=\"external\">GitHub</a>搭建博客的<a href=\"http://www.jianshu.com/p/465830080ea9\" target=\"_blank\" rel=\"external\">文章</a>，又参考（COPY）了一个叫<a href=\"https://github.com/forsigner/fexo\" target=\"_blank\" rel=\"external\">Fexo</a>的极简风格，才有了博客目前的这个样子。</p>\n<p>算是有个自己的小窝点了，希望能够定期（一周左右）更新 ：）</p>\n"},{"title":"about","url":"http://yoursite.com/about/index.html","content":""},{"title":"category","url":"http://yoursite.com/category/index.html","content":""},{"title":"link","url":"http://yoursite.com/link/index.html","content":""},{"title":"project","url":"http://yoursite.com/project/index.html","content":""},{"title":"search","url":"http://yoursite.com/search/index.html","content":""},{"title":"tag","url":"http://yoursite.com/tag/index.html","content":""}]